<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="ReadPageModule.ReadWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:ReadPageModule" WindowStyle="SingleBorderWindow" UseLayoutRounding="True" Title="ReadWindow" WindowState="Maximized" ResizeMode="NoResize" Icon="Assets/64x64.ico">
  <FrameworkElement.Resources>
    <ResourceDictionary>
      <local:thumbNailListBoxWidthHeightConverter x:Key="thumbNailListBoxConverter" />
      <local:BooleanMediaDownloadStatusConverter x:Key="booleanMediaDownloadStatusConverter" />
      <local:UriToCachedImageConverter x:Key="uriToCachedImageConverter" />
      <Style x:Key="DocumentViewerStyle1" TargetType="{x:Type DocumentViewer}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type DocumentViewer}">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Focusable="False">
                <Grid Background="{TemplateBinding Background}" KeyboardNavigation.TabNavigation="Local">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <ContentControl Grid.Column="0" Focusable="{TemplateBinding Focusable}" Grid.Row="0" Style="{DynamicResource ContentControlStyle1}" TabIndex="0" />
                  <ScrollViewer Name="PART_ContentHost" CanContentScroll="True" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalScrollBarVisibility="Auto" IsTabStop="True" Grid.Row="1" TabIndex="1" />
                  <DockPanel Grid.Row="1">
                    <FrameworkElement DockPanel.Dock="Right" Width="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}" />
                    <Image Height="10" Visibility="Visible" VerticalAlignment="top" />
                  </DockPanel>
                </Grid>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ContentControlStyle1" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ContentControl}">
              <ToolBar Focusable="{TemplateBinding Focusable}" ToolBarTray.IsLocked="True" Language="en-us" KeyboardNavigation.TabNavigation="Continue" Uid="ToolBar_2">
                <Button Name="PrintButton" IsTabStop="True" Margin="2" Padding="2" ToolTipService.ShowOnDisabled="True" TabIndex="0" Uid="Button_14" VerticalAlignment="Center" Width="36" Content="{Binding print, Source={StaticResource Resources}}" ToolTip="{Binding print, Source={StaticResource Resources}}" />
                <Button Name="CloseButton" IsTabStop="True" Margin="2" Padding="2" ToolTipService.ShowOnDisabled="True" TabIndex="0" Uid="Button_14" VerticalAlignment="Center" Width="36" Content="{Binding close, Source={StaticResource Resources}}" />
              </ToolBar>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="FlowDocumentReaderStyle1" TargetType="{x:Type FlowDocumentReader}">
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type FlowDocumentReader}">
              <DockPanel Language="en-us" LastChildFill="True" Uid="DockPanel_3">
                <Canvas Name="ToolBarSensor" Visibility="Collapsed" Background="#00FFFFFF" DockPanel.Dock="Top" ZIndex="500" HorizontalAlignment="Stretch" Height="1" Width="{Binding ElementName=ToolBarInReader, Path=ActualWidth}" />
                <Grid Name="PenMemoToolBar" Height="30" DockPanel.Dock="Top" ZIndex="500" HorizontalAlignment="Stretch" Visibility="Collapsed">
                  <Panel.Background>
                    <ImageBrush ImageSource="Assets/btn_orang_bg.png" />
                  </Panel.Background>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="29" />
                      <ColumnDefinition Width="29" />
                      <ColumnDefinition Width="29" />
                      <ColumnDefinition Width="29" />
                      <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <RadioButton Name="BackToOriToolBar" Grid.Column="4" Uid="RadioButton_2" Style="{DynamicResource RadioButtonStyle}" HorizontalAlignment="Left" ToolTip="{Binding backReadMode, Source={StaticResource Resources}}">
                      <ContentControl.Content>
                        <Image Width="40" Height="40" SnapsToDevicePixels="True" Margin="-10">
                          <FrameworkElement.Style>
                            <Style TargetType="{x:Type Image}">
                              <Setter Property="Source" Value="Assets/ReadWindow/i_book.png" />
                            </Style>
                          </FrameworkElement.Style>
                        </Image>
                      </ContentControl.Content>
                    </RadioButton>
                  </Grid>
                </Grid>
                <Grid Name="ToolBarInReader" Height="30" DockPanel.Dock="Top" ZIndex="500" HorizontalAlignment="Stretch" Uid="Grid_31">
                  <Panel.Background>
                    <ImageBrush ImageSource="Assets/ReadWindow/header_bg_bar.png" />
                  </Panel.Background>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid Column="0" HorizontalAlignment="Left" Uid="StackPanel_5" ZIndex="500">
                    <StackPanel Orientation="Horizontal">
                      <RadioButton Name="BackToBookShelfButton" Uid="RadioButton_1" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding backMyBookcase, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_backtobookShelf.png" />
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="FullScreenButton" Uid="RadioButton_1" IsChecked="False" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding fullScreen, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_03.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=FullScreenButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_03_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="PageViewButton" GroupName="ViewingMode" IsEnabled="{TemplateBinding IsPageViewEnabled}" Uid="RadioButton_1" IsChecked="False" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding onePageMode, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_02.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=PageViewButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_02_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="TwoPageViewButton" GroupName="ViewingMode" IsEnabled="{TemplateBinding IsTwoPageViewEnabled}" Uid="RadioButton_2" IsChecked="True" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding twoPageMode, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_01.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=TwoPageViewButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_01_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="PenMemoButton" IsChecked="False" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding hightlighter, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_15.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=PenMemoButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_15_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                    </StackPanel>
                  </Grid>
                  <StackPanel Name="PageCountAndButtons" TextElement.FontFamily="Arial Unicode MS, Arial" TextElement.FontWeight="Bold" TextElement.FontSize="13" TextElement.Foreground="#ffffff" Grid.Column="1" HorizontalAlignment="Center" Orientation="Horizontal" Uid="StackPanel_3" VerticalAlignment="Center">
                    <TextBlock HorizontalAlignment="Center" Uid="TextBlock_8" VerticalAlignment="Center">
                      <InlineUIContainer>
                        <TextBlock Visibility="Hidden" Uid="TextBlock_9" Text="{Binding PageNumber, NotifyOnTargetUpdated=True, RelativeSource={RelativeSource TemplatedParent}}" />
                      </InlineUIContainer> <InlineUIContainer><TextBlock Name="CurPageInReader" /></InlineUIContainer> <Run Text=" " /><Run Text="/" /><Run Text=" " /> <InlineUIContainer><TextBlock Name="TotalPageInReader" /></InlineUIContainer> <InlineUIContainer><TextBlock Visibility="Hidden" Uid="TextBlock_10" Text="{Binding PageCount, RelativeSource={RelativeSource TemplatedParent}}" /></InlineUIContainer></TextBlock>
                  </StackPanel>
                  <Grid Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="-5,-5,5,-5">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Name="MediasStackPanel" Grid.Column="0" Orientation="Horizontal" Uid="StackPanel_4" Margin="-5">
                      <RadioButton Name="FullTextButton" IsChecked="False" Visibility="Collapsed" Uid="RadioButton_1" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding fullText, Source={StaticResource Resources}}">
                        <Control.Background>
                          <ImageBrush ImageSource="Assets/ReadWindow/header_bg_bar.png" />
                        </Control.Background>
                        <ContentControl.Content>
                          <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FFFFFFFF" Text="全" />
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="SearchButton" IsChecked="False" Visibility="Collapsed" Uid="RadioButton_1" HorizontalAlignment="Left" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding fullTextSearch, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_09.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=SearchButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_09_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="PrintButton" IsChecked="False" Visibility="Collapsed" Uid="RadioButton_1" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding printThisPage, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_13.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=PrintButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_13_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="ExportButton" IsChecked="False" Visibility="Visible" Uid="RadioButton_1" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding noteExport, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_013.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=ExportButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_013_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="ShareButton" IsChecked="False" Visibility="Visible" Uid="RadioButton_1" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding share, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_12.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=ShareButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_12_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="MediaListButton" Visibility="Collapsed" IsChecked="False" Uid="RadioButton_1" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding multimediaList, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_05.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=MediaListButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_05_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="ShowAllImageButton" IsChecked="False" Uid="RadioButton_1" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding thumbnailOverview, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_06.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=ShowAllImageButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_06_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="ContentButton" IsChecked="False" Uid="RadioButton_1" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding skipContentPage, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_10.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=ContentButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_10_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="TocButton" IsChecked="False" Visibility="Collapsed" Uid="RadioButton_1" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding contents, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_08.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=TocButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_08_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="SettingsButton" IsChecked="False" ToolTip="{Binding preferences, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_16.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=SettingsButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_16_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="NoteButton" GroupName="NoteMode" IsChecked="False" Visibility="Visible" Uid="RadioButton_1" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding note, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_11.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=NoteButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_11_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                      <RadioButton Name="BookMarkButton" GroupName="BookMarkMode" IsChecked="False" Style="{DynamicResource RadioButtonStyle}" ToolTip="{Binding bookMarks, Source={StaticResource Resources}}">
                        <ContentControl.Content>
                          <Image Width="24" Height="24" SnapsToDevicePixels="True">
                            <FrameworkElement.Style>
                              <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Assets/ReadWindow/btn_04.png" />
                                <Style.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=BookMarkButton, Path=IsChecked}">
                                    <Setter Property="Source" Value="Assets/ReadWindow/btn_04_over.png" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </FrameworkElement.Style>
                          </Image>
                        </ContentControl.Content>
                      </RadioButton>
                    </StackPanel>
                    <RepeatButton Name="zoomOutBtn" Margin="10,0,0,0" BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Height="{TemplateBinding FontSize}" Uid="RepeatButton_11" Width="{TemplateBinding FontSize}" ToolTip="{Binding zoomOut, Source={StaticResource Resources}}">
                      <ContentControl.Content>
                        <Image Width="13" Height="13" SnapsToDevicePixels="True">
                          <FrameworkElement.Style>
                            <Style TargetType="{x:Type Image}">
                              <Setter Property="Source" Value="Assets/ReadWindow/-.png" />
                            </Style>
                          </FrameworkElement.Style>
                        </Image>
                      </ContentControl.Content>
                      <FrameworkElement.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                          <Setter Property="Padding" Value="0,0,0,0" />
                          <Setter Property="Template">
                            <Setter.Value>
                              <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Border Background="#00FFFFFF" Uid="Border_41" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}">
                                  <ContentPresenter Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_3" />
                                </Border>
                                <ControlTemplate.Triggers>
                                  <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter TargetName="Content" Property="RenderTransform">
                                      <Setter.Value>
                                        <ScaleTransform ScaleY="1.1" ScaleX="1.1" />
                                      </Setter.Value>
                                    </Setter>
                                  </Trigger>
                                  <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Content" Property="RenderTransform">
                                      <Setter.Value>
                                        <ScaleTransform ScaleY="1" ScaleX="1" />
                                      </Setter.Value>
                                    </Setter>
                                  </Trigger>
                                </ControlTemplate.Triggers>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                          <Style.BasedOn>
                            <Style TargetType="{x:Type RepeatButton}">
                              <Setter Property="Padding" Value="5" />
                              <Setter Property="RepeatButton.Delay" Value="1000" />
                              <Setter Property="RepeatButton.Interval" Value="250" />
                              <Style.BasedOn>
                                <Style TargetType="{x:Type ButtonBase}">
                                  <Setter Property="Focusable" Value="False" />
                                  <Setter Property="UIElement.Opacity" Value="1" />
                                  <Setter Property="FrameworkElement.Cursor" Value="Hand" />
                                  <Setter Property="Background" Value="#00FFFFFF" />
                                  <Setter Property="Padding" Value="3,1" />
                                  <Setter Property="BorderThickness" Value="0" />
                                  <Setter Property="MinWidth" Value="0" />
                                  <Setter Property="MinHeight" Value="0" />
                                  <Setter Property="Template">
                                    <Setter.Value>
                                      <ControlTemplate TargetType="{x:Type ButtonBase}">
                                        <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                          <ContentPresenter Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                          <Trigger Property="UIElement.IsMouseOver" Value="True">
                                            <Setter TargetName="Content" Property="RenderTransform">
                                              <Setter.Value>
                                                <ScaleTransform ScaleY="1.3" ScaleX="1.3" />
                                              </Setter.Value>
                                            </Setter>
                                          </Trigger>
                                          <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="Content" Property="RenderTransform">
                                              <Setter.Value>
                                                <ScaleTransform ScaleY="0.9" ScaleX="0.9" />
                                              </Setter.Value>
                                            </Setter>
                                          </Trigger>
                                        </ControlTemplate.Triggers>
                                      </ControlTemplate>
                                    </Setter.Value>
                                  </Setter>
                                  <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                      <Setter Property="UIElement.Opacity" Value="0.3" />
                                    </Trigger>
                                  </Style.Triggers>
                                </Style>
                              </Style.BasedOn>
                            </Style>
                          </Style.BasedOn>
                        </Style>
                      </FrameworkElement.Style>
                    </RepeatButton>
                    <Slider Name="SliderInReader" Grid.Column="2" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Stretch" Maximum="3" Minimum="1" TickFrequency="0.25" Uid="Slider_3" VerticalAlignment="Center" Width="100">
                      <FrameworkElement.Style>
                        <Style TargetType="{x:Type Slider}">
                          <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
                          <Setter Property="Focusable" Value="False" />
                          <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
                          <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                          <Setter Property="BorderThickness" Value="1" />
                          <Setter Property="BorderBrush" Value="#00000000" />
                          <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                          <Setter Property="Slider.IsSnapToTickEnabled" Value="True" />
                          <Setter Property="UIElement.RenderTransformOrigin" Value="0.5,0.5" />
                          <Setter Property="MinWidth" Value="50" />
                          <Setter Property="MinHeight" Value="0" />
                          <Setter Property="Width" Value="Auto" />
                          <Setter Property="Padding" Value="2,0" />
                          <Setter Property="Height" Value="Auto" />
                          <Setter Property="UIElement.Opacity" Value="0.75" />
                          <Setter Property="Slider.Delay" Value="1000" />
                          <Setter Property="Slider.Interval" Value="250" />
                          <Setter Property="Template">
                            <Setter.Value>
                              <ControlTemplate TargetType="{x:Type Slider}">
                                <Border Background="#00FFFFFF" Padding="{TemplateBinding Padding}" Uid="Border_45">
                                  <Grid ClipToBounds="False" Uid="Grid_22">
                                    <Grid.ColumnDefinitions>
                                      <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                      <RowDefinition Height="Auto" />
                                      <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                      <RowDefinition Height="Auto" />
                                      <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TickBar Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Uid="TickBar_1" Visibility="Collapsed" />
                                    <Border Background="#FFFFFFFF" CornerRadius="2" Height="4" Opacity="0.5" Grid.Row="1" Uid="Border_46" />
                                    <Canvas Height="4" Grid.Row="1" Uid="Canvas_7" VerticalAlignment="Center">
                                      <Rectangle Name="PART_SelectionRange" Fill="{TemplateBinding Foreground}" Height="2" Canvas.Top="1" Uid="Rectangle_17" Visibility="Hidden" />
                                    </Canvas>
                                    <Track Name="PART_Track" Grid.Row="1" Uid="PART_Track">
                                      <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="Slider.DecreaseLarge" Uid="RepeatButton_1">
                                          <FrameworkElement.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                              <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
                                              <Setter Property="IsTabStop" Value="False" />
                                              <Setter Property="Focusable" Value="False" />
                                              <Setter Property="Template">
                                                <Setter.Value>
                                                  <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Border Background="#00FFFFFF" Uid="Border_43" />
                                                  </ControlTemplate>
                                                </Setter.Value>
                                              </Setter>
                                            </Style>
                                          </FrameworkElement.Style>
                                        </RepeatButton>
                                      </Track.DecreaseRepeatButton>
                                      <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="Slider.IncreaseLarge" Uid="RepeatButton_2">
                                          <FrameworkElement.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                              <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
                                              <Setter Property="IsTabStop" Value="False" />
                                              <Setter Property="Focusable" Value="False" />
                                              <Setter Property="Template">
                                                <Setter.Value>
                                                  <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Border Background="#00FFFFFF" Uid="Border_43" />
                                                  </ControlTemplate>
                                                </Setter.Value>
                                              </Setter>
                                            </Style>
                                          </FrameworkElement.Style>
                                        </RepeatButton>
                                      </Track.IncreaseRepeatButton>
                                      <Track.Thumb>
                                        <Thumb Background="{TemplateBinding Background}" Uid="Thumb_5">
                                          <FrameworkElement.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                              <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                                              <Setter Property="Focusable" Value="False" />
                                              <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
                                              <Setter Property="FrameworkElement.Cursor" Value="Hand" />
                                              <Setter Property="Padding" Value="6" />
                                              <Setter Property="Template">
                                                <Setter.Value>
                                                  <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="#00FFFFFF" Margin="-2" Uid="Border_44" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}">
                                                      <Image Width="8" Height="15" Margin="0,2,0,0" SnapsToDevicePixels="True">
                                                        <FrameworkElement.Style>
                                                          <Style TargetType="{x:Type Image}">
                                                            <Setter Property="Source" Value="Assets/ReadWindow/bar.png" />
                                                          </Style>
                                                        </FrameworkElement.Style>
                                                      </Image>
                                                    </Border>
                                                  </ControlTemplate>
                                                </Setter.Value>
                                              </Setter>
                                            </Style>
                                          </FrameworkElement.Style>
                                        </Thumb>
                                      </Track.Thumb>
                                    </Track>
                                    <TickBar Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Uid="TickBar_2" Visibility="Collapsed" />
                                  </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                  <Trigger Property="Slider.TickPlacement" Value="TopLeft">
                                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                                  </Trigger>
                                  <Trigger Property="Slider.TickPlacement" Value="BottomRight">
                                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                                  </Trigger>
                                  <Trigger Property="Slider.TickPlacement" Value="Both">
                                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                                  </Trigger>
                                  <Trigger Property="Slider.IsSelectionRangeEnabled" Value="True">
                                    <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                                  </Trigger>
                                  <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter Property="RenderTransform">
                                      <Setter.Value>
                                        <ScaleTransform ScaleY="1.05" ScaleX="1.05" />
                                      </Setter.Value>
                                    </Setter>
                                  </Trigger>
                                  <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter Property="UIElement.Opacity" Value="1" />
                                    <Setter Property="RenderTransform">
                                      <Setter.Value>
                                        <ScaleTransform ScaleY="1.05" ScaleX="1.05" />
                                      </Setter.Value>
                                    </Setter>
                                  </Trigger>
                                  <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="UIElement.Opacity" Value="0.3" />
                                  </Trigger>
                                </ControlTemplate.Triggers>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </Style>
                      </FrameworkElement.Style>
                    </Slider>
                    <RepeatButton Name="zoomInBtn" BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="3" Foreground="{TemplateBinding Foreground}" Height="{TemplateBinding FontSize}" Uid="RepeatButton_12" Width="{TemplateBinding FontSize}" ToolTip="{Binding zoomIn, Source={StaticResource Resources}}">
                      <ContentControl.Content>
                        <Image Width="13" Height="13" SnapsToDevicePixels="True">
                          <FrameworkElement.Style>
                            <Style TargetType="{x:Type Image}">
                              <Setter Property="Source" Value="Assets/ReadWindow/+.png" />
                            </Style>
                          </FrameworkElement.Style>
                        </Image>
                      </ContentControl.Content>
                      <FrameworkElement.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                          <Setter Property="Padding" Value="0,0,0,0" />
                          <Setter Property="Template">
                            <Setter.Value>
                              <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Border Background="#00FFFFFF" Uid="Border_41" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}">
                                  <ContentPresenter Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_3" />
                                </Border>
                                <ControlTemplate.Triggers>
                                  <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter TargetName="Content" Property="RenderTransform">
                                      <Setter.Value>
                                        <ScaleTransform ScaleY="1.1" ScaleX="1.1" />
                                      </Setter.Value>
                                    </Setter>
                                  </Trigger>
                                  <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Content" Property="RenderTransform">
                                      <Setter.Value>
                                        <ScaleTransform ScaleY="1" ScaleX="1" />
                                      </Setter.Value>
                                    </Setter>
                                  </Trigger>
                                </ControlTemplate.Triggers>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                          <Style.BasedOn>
                            <Style TargetType="{x:Type RepeatButton}">
                              <Setter Property="Padding" Value="5" />
                              <Setter Property="RepeatButton.Delay" Value="1000" />
                              <Setter Property="RepeatButton.Interval" Value="250" />
                              <Style.BasedOn>
                                <Style TargetType="{x:Type ButtonBase}">
                                  <Setter Property="Focusable" Value="False" />
                                  <Setter Property="UIElement.Opacity" Value="1" />
                                  <Setter Property="FrameworkElement.Cursor" Value="Hand" />
                                  <Setter Property="Background" Value="#00FFFFFF" />
                                  <Setter Property="Padding" Value="3,1" />
                                  <Setter Property="BorderThickness" Value="0" />
                                  <Setter Property="MinWidth" Value="0" />
                                  <Setter Property="MinHeight" Value="0" />
                                  <Setter Property="Template">
                                    <Setter.Value>
                                      <ControlTemplate TargetType="{x:Type ButtonBase}">
                                        <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                          <ContentPresenter Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                          <Trigger Property="UIElement.IsMouseOver" Value="True">
                                            <Setter TargetName="Content" Property="RenderTransform">
                                              <Setter.Value>
                                                <ScaleTransform ScaleY="1.3" ScaleX="1.3" />
                                              </Setter.Value>
                                            </Setter>
                                          </Trigger>
                                          <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="Content" Property="RenderTransform">
                                              <Setter.Value>
                                                <ScaleTransform ScaleY="0.9" ScaleX="0.9" />
                                              </Setter.Value>
                                            </Setter>
                                          </Trigger>
                                        </ControlTemplate.Triggers>
                                      </ControlTemplate>
                                    </Setter.Value>
                                  </Setter>
                                  <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                      <Setter Property="UIElement.Opacity" Value="0.3" />
                                    </Trigger>
                                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                                      <Setter Property="UIElement.Opacity" Value="1" />
                                    </Trigger>
                                  </Style.Triggers>
                                </Style>
                              </Style.BasedOn>
                            </Style>
                          </Style.BasedOn>
                        </Style>
                      </FrameworkElement.Style>
                    </RepeatButton>
                  </Grid>
                </Grid>
                <Grid Uid="Grid_33">
                  <Canvas Name="MediaTableCanvas" ZIndex="12" Visibility="Collapsed" Background="#00FFFFFF" Width="{Binding ElementName=cf, Path=ActualWidth}" Height="{Binding ElementName=cf, Path=ActualHeight}">
                    <Border Name="mediaListBorder" Panel.ZIndex="13" CornerRadius="6" BorderBrush="#FF808080" Background="#FFD3D3D3" BorderThickness="2" Padding="8" Canvas.Top="10" Canvas.Right="30">
                      <StackPanel Name="mediaListPanel" ZIndex="13" Background="#FFFFFFFF" Width="350" Height="400" />
                    </Border>
                  </Canvas>
                  <Canvas Name="stageCanvas" ZIndex="3" Background="#00FFFFFF" RenderTransformOrigin="0.5, 0.5" />
                  <InkCanvas Name="penMemoCanvas" Background="#00FFFFFF" EditingMode="None" Panel.ZIndex="2" RenderTransformOrigin="0.5, 0.5" />
                  <Canvas Name="PopupControlCanvas" ZIndex="899" Visibility="Collapsed" Background="#FFD3D3D3" Opacity="0.1" Width="{Binding ElementName=cf, Path=ActualWidth}" Height="{Binding ElementName=cf, Path=ActualHeight}" />
                  <Canvas Name="HiddenControlCanvas" ZIndex="800" Visibility="Collapsed" Background="#212020" Width="{Binding ElementName=cf, Path=ActualWidth}" Height="{Binding ElementName=cf, Path=ActualHeight}" />
                  <Canvas Name="zoomCanvas" ZIndex="1" Background="#212020" RenderTransformOrigin="0.5, 0.5" />
                  <Border Name="PART_ContentHost" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" KeyboardNavigation.IsTabStop="False" Margin="{TemplateBinding Padding}" KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local" Uid="Border_59" Background="#212020" />
                  <RadioButton Name="leftPageButton" Panel.ZIndex="10" Command="NavigationCommands.PreviousPage" IsEnabled="{TemplateBinding CanGoToPreviousPage}" VerticalAlignment="Center" HorizontalAlignment="Left" ToolTip="{Binding leftPage, Source={StaticResource Resources}}">
                    <ContentControl.Content>
                      <Image Height="44" Width="44" Source="Assets/ReadWindow/arrow_left_epub.png" SnapsToDevicePixels="True" />
                    </ContentControl.Content>
                  </RadioButton>
                  <RadioButton Name="rightPageButton" Panel.ZIndex="10" Command="NavigationCommands.NextPage" IsEnabled="{TemplateBinding CanGoToNextPage}" VerticalAlignment="Center" HorizontalAlignment="Right" ToolTip="{Binding rightPage, Source={StaticResource Resources}}">
                    <ContentControl.Content>
                      <Image Height="44" Width="44" Source="Assets/ReadWindow/arrow_right_epub.png" SnapsToDevicePixels="True" />
                    </ContentControl.Content>
                  </RadioButton>
                </Grid>
              </DockPanel>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="VisibleIfNotDownloaded" TargetType="{x:Type Border}">
        <Style.Triggers>
          <DataTrigger Value="False" Binding="{Binding isDownloaded, Mode=TwoWay, NotifyOnSourceUpdated=True}">
            <Setter Property="Background" Value="#4C000000" />
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBox}">
              <Border Name="Border" BorderThickness="1" CornerRadius="2">
                <ScrollViewer Name="SVInLV" Width="{Binding ElementName=cf, Path=ActualWidth, ConverterParameter=30, Converter={StaticResource thumbNailListBoxConverter}}">
                  <WrapPanel Name="wrapPanel" IsItemsHost="True" Orientation="Horizontal" />
                </ScrollViewer>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                  <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
          <Setter.Value>
            <DataTemplate>
              <Grid>
                <Grid Margin="5">
                  <Border BorderBrush="#fefefe" BorderThickness="3">
                    <Image Name="imageInListBox" Stretch="Uniform" Source="{Binding Path=leftImagePath, Converter={StaticResource uriToCachedImageConverter}}" />
                  </Border>
                  <Border Style="{StaticResource VisibleIfNotDownloaded}" />
                </Grid>
                <Grid>
                  <Border Background="#4C000000" VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="30" Height="20">
                    <TextBlock FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FFFFFF" FontWeight="Bold" Text="{Binding pageIndex}" />
                  </Border>
                </Grid>
              </Grid>
            </DataTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
          <Setter.Value>
            <Style TargetType="{x:Type ListBoxItem}">
              <Setter Property="Height" Value="120" />
              <Setter Property="VerticalAlignment" Value="Top" />
            </Style>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="SearchListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBox}">
              <Border Name="Border">
                <StackPanel Orientation="Vertical">
                  <ScrollViewer Focusable="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Width="350" Height="370">
                    <StackPanel IsItemsHost="True" Orientation="Vertical" />
                  </ScrollViewer>
                </StackPanel>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                  <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
          <Setter.Value>
            <Style TargetType="{x:Type ListBoxItem}">
              <Style.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                  <Setter Property="Background" Value="#E4E0E1" />
                </Trigger>
              </Style.Triggers>
            </Style>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
          <Setter.Value>
            <DataTemplate>
              <Grid Margin="5">
                <StackPanel Orientation="Horizontal" Height="100">
                  <Border BorderBrush="#DFDFDF" BorderThickness="2">
                    <Image Stretch="Uniform" Source="{Binding Path=imagePath}" />
                  </Border>
                  <Grid Margin="13,12,30,10">
                    <TextBlock LineHeight="20" LineStackingStrategy="BlockLineHeight" VerticalAlignment="Top" FontSize="14" Foreground="#212121" TextWrapping="WrapWithOverflow" Width="230" Text="{Binding targetLine}" />
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" TextElement.FontSize="13" TextElement.Foreground="#444444">
                      <TextBlock Text="{Binding the, Source={StaticResource Resources}}" />
                      <TextBlock Text="{Binding showedPage}" />
                      <TextBlock Text="{Binding page, Source={StaticResource Resources}}" />
                    </StackPanel>
                  </Grid>
                </StackPanel>
              </Grid>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <DataTemplate x:Key="MediaListBoxHeaderTemplateStyle">
        <Border Name="grid">
          <ContentPresenter>
            <ContentPresenter.Content>
              <Grid TextElement.FontFamily="微軟正黑體" TextElement.FontSize="15" TextElement.FontWeight="Bold">
                <TextBlock Text="{TemplateBinding Content}" />
              </Grid>
            </ContentPresenter.Content>
          </ContentPresenter>
        </Border>
      </DataTemplate>
      <Style x:Key="MediaListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBox}">
              <Border Name="Border">
                <StackPanel Orientation="Vertical">
                  <ScrollViewer Focusable="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Width="340" Height="370">
                    <StackPanel IsItemsHost="True" Orientation="Vertical" />
                  </ScrollViewer>
                </StackPanel>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                  <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
          <Setter.Value>
            <Style TargetType="{x:Type ListBoxItem}">
              <Style.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                  <Setter Property="Background" Value="#E4E0E1" />
                </Trigger>
              </Style.Triggers>
            </Style>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
          <Setter.Value>
            <DataTemplate>
              <Grid Margin="5" TextElement.FontFamily="微軟正黑體">
                <StackPanel Orientation="Horizontal" Height="100">
                  <RadioButton Name="ButtonInMediaList" Background="#00FFFFFF" Uid="{Binding pageId}" Tag="{Binding mediaSourcePath}">
                    <ContentControl.Content>
                      <Grid Margin="5">
                        <StackPanel Orientation="Vertical">
                          <Border BorderBrush="#DFDFDF" BorderThickness="2" HorizontalAlignment="Stretch">
                            <Image Width="50" Stretch="Uniform" Source="{Binding Path=pagePath}" />
                          </Border>
                          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" TextElement.Foreground="#444444" TextElement.FontSize="13">
                            <TextBlock Text="{Binding the, Source={StaticResource Resources}}" />
                            <TextBlock Text="{Binding pageId}" />
                            <TextBlock Text="{Binding page, Source={StaticResource Resources}}" />
                          </StackPanel>
                        </StackPanel>
                      </Grid>
                    </ContentControl.Content>
                  </RadioButton>
                  <Grid Margin="13,12,30,10">
                    <TextBlock VerticalAlignment="Top" FontSize="14" Foreground="#212121" TextWrapping="WrapWithOverflow" Width="230" Text="{Binding mediaName}" />
                    <TextBlock VerticalAlignment="Bottom" TextElement.FontSize="13" TextElement.Foreground="#444444" Text="{Binding downloadStatus, Mode=TwoWay, NotifyOnSourceUpdated=True, Converter={StaticResource booleanMediaDownloadStatusConverter}}" />
                  </Grid>
                </StackPanel>
              </Grid>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ShareListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBox}">
              <Border Name="Border" BorderBrush="#DCDCDC" BorderThickness="2">
                <StackPanel Orientation="Vertical">
                  <ScrollViewer Focusable="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Width="340" Height="370">
                    <StackPanel IsItemsHost="True" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" />
                  </ScrollViewer>
                </StackPanel>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                  <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
          <Setter.Value>
            <DataTemplate>
              <Border BorderBrush="#E1E1E1" BorderThickness="1" Height="50" Width="120">
                <Grid Background="#F5F5F5" TextElement.Foreground="#2E2E2E" TextElement.FontSize="14" TextElement.FontFamily="Arial Unicode MS, Arial" TextElement.FontWeight="Bold">
                  <RadioButton Name="ButtonInShareList" Tag="{Binding sharePlatForm}">
                    <ContentControl.Content>
                      <StackPanel Margin="6,4,6,4" Orientation="Horizontal">
                        <Image Width="26" Height="26" Stretch="Uniform" Source="{Binding imagePath}" />
                        <TextBlock Margin="6,9" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding textShown}" />
                      </StackPanel>
                    </ContentControl.Content>
                  </RadioButton>
                </Grid>
              </Border>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="{x:Type RadioButton}" x:Name="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type RadioButton}">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Uid="Border_40">
                <ContentPresenter Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_3" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                  <Setter TargetName="Content" Property="RenderTransform">
                    <Setter.Value>
                      <ScaleTransform ScaleY="0.9" ScaleX="0.9" />
                    </Setter.Value>
                  </Setter>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.BasedOn>
          <Style TargetType="{x:Type ToggleButton}">
            <Style.BasedOn>
              <Style TargetType="{x:Type ButtonBase}">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="UIElement.Opacity" Value="1" />
                <Setter Property="FrameworkElement.Cursor" Value="Hand" />
                <Setter Property="Background" Value="#00FFFFFF" />
                <Setter Property="Padding" Value="3,1" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                      <Border Background="{TemplateBinding Background}" Uid="Border_39">
                        <ContentPresenter Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2" />
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                          <Setter TargetName="Content" Property="RenderTransform">
                            <Setter.Value>
                              <ScaleTransform ScaleY="1.1" ScaleX="1.1" />
                            </Setter.Value>
                          </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                          <Setter TargetName="Content" Property="RenderTransform">
                            <Setter.Value>
                              <ScaleTransform ScaleY="0.9" ScaleX="0.9" />
                            </Setter.Value>
                          </Setter>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
                <Style.Triggers>
                  <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="UIElement.Opacity" Value="0.3" />
                  </Trigger>
                  <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="UIElement.Opacity" Value="1.1" />
                  </Trigger>
                </Style.Triggers>
              </Style>
            </Style.BasedOn>
            <Style.Triggers>
              <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
              </Trigger>
              <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="UIElement.Opacity" Value="1" />
              </Trigger>
            </Style.Triggers>
          </Style>
        </Style.BasedOn>
      </Style>
      <Style x:Key="AreaButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border Name="Border" BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="#FF0000FF">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="TreeViewButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Grid>
                <Border Name="Border" BorderThickness="1" Background="{TemplateBinding Background}" HorizontalAlignment="Left">
                  <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                </Border>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ContentTreeViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ItemTemplate">
          <Setter.Value>
            <HierarchicalDataTemplate ItemsSource="{Binding subNavPoint}">
              <HierarchicalDataTemplate.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                  <Setter Property="Margin" Value="8,5,8,5" />
                  <Setter Property="TreeViewItem.IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, NotifyOnSourceUpdated=True}" />
                  <Setter Property="HorizontalContentAlignment" Value="Center" />
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                          </Grid.ColumnDefinitions>
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                          </Grid.RowDefinitions>
                          <ToggleButton Name="Expander" Style="{DynamicResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                          <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                          </Border>
                          <ItemsPresenter Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" />
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                          </Trigger>
                          <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                          </Trigger>
                          <MultiTrigger>
                            <MultiTrigger.Conditions>
                              <Condition Property="HasHeader" Value="False" />
                              <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                          </MultiTrigger>
                          <MultiTrigger>
                            <MultiTrigger.Conditions>
                              <Condition Property="HasHeader" Value="False" />
                              <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                          </MultiTrigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </HierarchicalDataTemplate.ItemContainerStyle>
              <HierarchicalDataTemplate.ItemTemplate>
                <DataTemplate>
                  <Button Style="{StaticResource TreeViewButtonStyle}" Tag="{Binding}">
                    <ContentControl.Content>
                      <TextBlock Text="{Binding navLabel}" />
                    </ContentControl.Content>
                  </Button>
                </DataTemplate>
              </HierarchicalDataTemplate.ItemTemplate>
            </HierarchicalDataTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
          <Setter.Value>
            <Style TargetType="{x:Type TreeViewItem}">
              <Setter Property="TreeViewItem.IsExpanded" Value="True" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Margin="13,10,0,0" TextElement.FontSize="14" TextElement.Foreground="#333333" TextElement.FontFamily="Arial Unicode MS, Arial">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" MinWidth="30" />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                      </Grid.RowDefinitions>
                      <Image Grid.Column="0" Width="9" Height="9" Margin="0,0,5,0" Source="Assets/ReadWindow/point.png" />
                      <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Button Style="{StaticResource TreeViewButtonStyle}" Tag="{Binding}">
                          <ContentControl.Content>
                            <TextBlock Text="{Binding navLabel}" />
                          </ContentControl.Content>
                        </Button>
                      </Border>
                      <ItemsPresenter Name="ItemsHost" Grid.Row="1" Grid.Column="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </FrameworkElement.Resources>
  <Grid Name="cf">
    <Grid.RowDefinitions>
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*" />
    </Grid.ColumnDefinitions>
    <FlowDocumentReader Name="cg" Grid.Row="0" ScrollViewer.VerticalScrollBarVisibility="Disabled" Style="{DynamicResource FlowDocumentReaderStyle1}" PreviewMouseWheel="a" PreviewKeyDown="a" />
    <ProgressBar Name="ch" VerticalAlignment="Bottom" Height="5" Width="{Binding ElementName=cf, Path=ActualWidth}" />
    <Canvas Name="ci" Visibility="Hidden" Opacity="0.9" VerticalAlignment="Bottom" Height="150" ZIndex="200" Grid.Column="0" Background="#212020" TextElement.FontSize="12" TextElement.FontWeight="Bold" TextElement.Foreground="#bcbcbc" TextElement.FontFamily="Arial Unicode MS, Arial">
      <StackPanel Name="cj" Orientation="Horizontal">
        <Grid Name="ck" HorizontalAlignment="Center">
          <StackPanel Name="cl" Orientation="Vertical">
            <RadioButton Name="cm" GroupName="ListBoxGroup" Margin="0, 5,0,0" IsChecked="True" ToolTip="{Binding showAllThumbnails, Source={StaticResource Resources}}" Click="ae">
              <ContentControl.Content>
                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                  <FrameworkElement.Style>
                    <Style TargetType="{x:Type Image}">
                      <Setter Property="Source" Value="Assets/ReadWindow/btn_full_over.png" />
                      <Style.Triggers>
                        <DataTrigger Value="False" Binding="{Binding ElementName=cm, Path=IsChecked}">
                          <Setter Property="Source" Value="Assets/ReadWindow/btn_full.png" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </FrameworkElement.Style>
                </Image>
              </ContentControl.Content>
            </RadioButton>
            <RadioButton Name="cn" GroupName="ListBoxGroup" Margin="0, 5,0,0" IsChecked="False" ToolTip="{Binding showAnnotation, Source={StaticResource Resources}}" Click="af">
              <ContentControl.Content>
                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                  <FrameworkElement.Style>
                    <Style TargetType="{x:Type Image}">
                      <Setter Property="Source" Value="Assets/ReadWindow/btn_note.png" />
                      <Style.Triggers>
                        <DataTrigger Value="True" Binding="{Binding ElementName=cn, Path=IsChecked}">
                          <Setter Property="Source" Value="Assets/ReadWindow/btn_note_over.png" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </FrameworkElement.Style>
                </Image>
              </ContentControl.Content>
            </RadioButton>
            <RadioButton Name="co" GroupName="ListBoxGroup" Margin="0, 5,0,0" IsChecked="False" ToolTip="{Binding showBookmarks, Source={StaticResource Resources}}" Click="ag">
              <ContentControl.Content>
                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                  <FrameworkElement.Style>
                    <Style TargetType="{x:Type Image}">
                      <Setter Property="Source" Value="Assets/ReadWindow/btn_bookmark.png" />
                      <Style.Triggers>
                        <DataTrigger Value="True" Binding="{Binding ElementName=co, Path=IsChecked}">
                          <Setter Property="Source" Value="Assets/ReadWindow/btn_bookmark_over.png" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </FrameworkElement.Style>
                </Image>
              </ContentControl.Content>
            </RadioButton>
            <RadioButton Name="cp" GroupName="ListBoxGroup" Margin="0, 5,0,0" ToolTip="{Binding hideThumbnails, Source={StaticResource Resources}}" Click="m">
              <ContentControl.Content>
                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                  <FrameworkElement.Style>
                    <Style TargetType="{x:Type Image}">
                      <Setter Property="Source" Value="Assets/ReadWindow/btn_hide.png" />
                      <Style.Triggers>
                        <DataTrigger Value="關閉縮圖總覽" Binding="{Binding ElementName=cp, Path=ToolTip}">
                          <Setter Property="Source" Value="Assets/ReadWindow/btn_close.png" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </FrameworkElement.Style>
                </Image>
              </ContentControl.Content>
            </RadioButton>
          </StackPanel>
        </Grid>
        <ListBox Name="cq" Height="150" Style="{DynamicResource ListBoxStyle}" SelectionChanged="c" />
      </StackPanel>
    </Canvas>
    <RadioButton Name="cr" GroupName="ShowListBoxMode" HorizontalAlignment="Left" Margin="15, 0, 0, 15" VerticalAlignment="Bottom" ToolTip="{Binding showThumbnails, Source={StaticResource Resources}}" Click="n">
      <ContentControl.Content>
        <Image Width="24" Height="24" Source="Assets/ReadWindow/btn_14.png" SnapsToDevicePixels="True" />
      </ContentControl.Content>
    </RadioButton>
    <RadioButton Name="cs" GroupName="LockMode" IsChecked="False" Visibility="Collapsed" Margin="0, 0, 15, 15" HorizontalAlignment="Right" VerticalAlignment="Bottom" Uid="RadioButton_1" ToolTip="{Binding locklock, Source={StaticResource Resources}}" Click="z">
      <ContentControl.Content>
        <Image Width="24" Height="24" SnapsToDevicePixels="True">
          <FrameworkElement.Style>
            <Style TargetType="{x:Type Image}">
              <Setter Property="Source" Value="Assets/ReadWindow/btn_07.png" />
              <Style.Triggers>
                <DataTrigger Value="True" Binding="{Binding ElementName=cs, Path=IsChecked}">
                  <Setter Property="Source" Value="Assets/ReadWindow/btn_07_over.png" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </FrameworkElement.Style>
        </Image>
      </ContentControl.Content>
    </RadioButton>
    <DocumentViewer Name="ct" Visibility="Collapsed" Style="{DynamicResource DocumentViewerStyle1}" />
  </Grid>
</Window>